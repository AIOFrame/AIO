let STRIPE_PUBLISHABLE_KEY=$("[data-stripe-public-key]").data("stripe-public-key");const stripe=Stripe(STRIPE_PUBLISHABLE_KEY);let elements=stripe.elements();let ir=$($("[type=text]")[0]);let style={base:{iconColor:ir.css("color"),border:ir.css("border"),height:ir.css("height"),borderRadius:ir.css("border-radius"),color:ir.css("color"),fontWeight:ir.css("font-weight"),fontFamily:ir.css("font-family"),fontSize:ir.css("font-size"),backgroundColor:ir.css("background-color"),letterSpacing:ir.css("letter-spacing"),fontSmoothing:"antialiased",padding:ir.css("padding")},invalid:{iconColor:"firebrick",color:"firebrick"}};let cardElement=elements.create("card",{style:style});cardElement.mount("#card-element");cardElement.on("change",function(a){displayError(a)});function displayError(a){if(a.error){notify(a.error.message)}}function process_payment(a){let subscriptionId;let clientSecret;let customerId;if(a[0]===1){notify("Subscription created with Stripe, proceeding to process payment!");let data=JSON.parse(a[1]);console.log(data);subscriptionId=data.subscription_id;clientSecret=data.client_secret;customerId=data.customer_id}setProcessing(true);let plan_id=$("[data-key=plan]").val();let customer_name=$("[data-key=name]").val();stripe.confirmCardPayment(clientSecret,{payment_method:{card:cardElement,billing_details:{name:customer_name}}}).then(function(b){if(b.error){notify(b.error.message);setProcessing(false);setLoading(false)}else{post($("#payment_response").data("action"),{subscription_id:subscriptionId,customer_id:customerId,plan_id:plan_id,payment_intent:b.paymentIntent},2,2)}})}function setLoading(a){if(a){$("#submit_button").attr("disabled",true);$("#spinner").removeClass("dn");$("#buttonText").addClass("dn")}else{$("#submit_button").attr("disabled",false);$("#spinner").addClass("dn");$("#buttonText").removeClass("dn")}}function setProcessing(a){if(a){}else{}};